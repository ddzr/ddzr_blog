<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on DDZR Blog</title>
    <link>/post/</link>
    <description>Recent content in Posts on DDZR Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 20 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Moving Files Around In R</title>
      <link>/post/moving-files-around-in-r/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/moving-files-around-in-r/</guid>
      <description>IntroRecently, I have a project requires some automation. By googling and reading answers on StackOverFlow, I learned quite a lot, I think it’s better to document these little tricks here. The automation can be decomposed into below operations:
Creating 24 folders with similar naming patterns
Copy same code into 24 foldersChange each code’s contents slightly, like input dataset name, output dataset file location, etc.Run same UNIX command on different directoryCovert each code’s output files from xls to xlsxCreating 24 folders with similar naming patternsI found this blog post really helpful, it includes common tips related to manipulate files in r.</description>
    </item>
    
    <item>
      <title>Learning data.table</title>
      <link>/post/learning-data-table/</link>
      <pubDate>Mon, 19 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/learning-data-table/</guid>
      <description>IntroThis would be lists of things related to data.table that I found useful. I realized there’re certain tasks I want to do in data.table that I keep forgetting and have to google it. After multiple times of repetition, I’m just getting tired of it and decide to document some tips/tricks I found useful.
These tricks could be dangerous workaround as I’m newbie to R/data.table. Sometimes I only know this would work but don’t know why it would work.</description>
    </item>
    
    <item>
      <title>Basic HTML Elements</title>
      <link>/post/basic-elements/</link>
      <pubDate>Mon, 16 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/basic-elements/</guid>
      <description>&lt;p&gt;The main purpose of this article is to make sure that all basic HTML Elements are decorated with CSS so as to not miss any possible elements when creating new themes for Hugo.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>